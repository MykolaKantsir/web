"""
Django settings for web project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
import logging
import logging.config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z658x@s630t*f$vfx+d0%vpr(%1x+vjuhh%c-$_ru+qtf*1)j7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost', 
    '127.0.0.1', 
    '192.168.112.145',
    'gastoninternal.azurewebsites.net', 
    'https://gastoninternal.azurewebsites.net',
    'http://gastoninternal.azurewebsites.net',
    '169.254.129.5',
    '169.254.129.6',
    ]

CSRF_TRUSTED_ORIGINS = [
    'http://gastoninternal.azurewebsites.net',
    'https://gastoninternal.azurewebsites.net',
    ]




# Application definition

INSTALLED_APPS = [
    'inventory',
    'monitoring',
    'measuring',
    'accounts.apps.AccountsConfig',
    'django_extensions',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Session settings
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Use PostgreSQL to store session data
SESSION_COOKIE_HTTPONLY = False  # Security: Allow JavaScript access to session cookie
SESSION_COOKIE_SECURE = False  # Enable if you're using HTTPS in production
SESSION_COOKIE_AGE = 1209600  # Set session expiration (2 weeks in seconds)
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Do not expire sessions when browser closes
SESSION_SAVE_EVERY_REQUEST = False  # Save session only when modified

ROOT_URLCONF = 'web.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'web.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'mykola',
        'PASSWORD': 'b45u17I?',
        'HOST': 'gastoninternaldatabase.postgres.database.azure.com',
        'PORT': '5432',
    },
    'local': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'django_db',
        'USER': 'postgres',
        'PASSWORD': 'b45u17I?',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static"),]
STATIC_URL = 'static/'
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Custom settings (Web Push, third-party keys, etc.)
WEBPUSH_PUBLIC_KEY = "BDkKDo9DtZDizB04X_ZYw17YUXvwte7zVF0Wf9dC-9kOimQkHt7We-7SQcpnVuqxro9PbLfz3fgghN4fTDJLUgM"
WEBPUSH_PRIVATE_KEY = "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgKt9WmXyNiBNbt6M53YgECajsCM0s1l9Gdrb8Kzz1dzuhRANCAAQ5Cg6PQ7WQ4swdOF/2WMNe2FF78LXu81RdFn/XQvvZDopkJB7e1nvu0kHKZ1bqsa6PT2y38934IITeH0wyS1ID"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Define the log directory
log_dir = '/home/LogFiles'


# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,

    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },

    'handlers': {
        'logfile': {
            'class': 'logging.handlers.WatchedFileHandler',
            'filename': os.path.join(log_dir, 'django_app.log'),
            'formatter': 'verbose',
        },
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },

    'loggers': {
        # Show Django's internal request logs only in terminal
        'django.server': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },

        # Your own logs â€” show in both terminal and file
        'django': {
            'handlers': ['logfile', 'console'],
            'level': 'WARNING',  # Only warnings/errors from Django internals
            'propagate': False,
        },

        # Custom app logs
        'inventory': {
            'handlers': ['logfile', 'console'],
            'level': 'INFO',
            'propagate': False,
        },

        'monitoring.views': {
            'handlers': ['logfile', 'console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    }
}

LOGIN_URL = '/accounts/login/'  # URL for login
LOGOUT_URL = '/accounts/logout/'  # URL for logout
LOGIN_REDIRECT_URL = '/'  # Where to redirect users after successful login
